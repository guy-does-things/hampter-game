[gd_scene load_steps=7 format=2]

[ext_resource path="res://scenes/inventory/map_menu.gd" type="Script" id=1]
[ext_resource path="res://dreadsitereuse/nsio/msiotest.gd" type="Script" id=2]
[ext_resource path="res://scripts/dircomp.gd" type="Script" id=3]

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0.14902, 0.196078, 0.219608, 1 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec4 color : hint_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 4 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/width = 1.0
shader_param/pattern = 2
shader_param/inside = false
shader_param/add_margins = false

[node name="Map" type="VBoxContainer"]
unique_name_in_owner = true
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_stretch_ratio = 1.38
script = ExtResource( 1 )

[node name="Label" type="Label" parent="."]
margin_right = 480.0
margin_bottom = 14.0
text = "area_name_heredsahdsalklljljlkj"
align = 1

[node name="Panel" type="Panel" parent="."]
margin_top = 18.0
margin_right = 480.0
margin_bottom = 246.0
size_flags_vertical = 3
custom_styles/panel = SubResource( 5 )

[node name="ViewportContainer" type="ViewportContainer" parent="Panel"]
pause_mode = 2
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
stretch = true

[node name="Viewport" type="Viewport" parent="Panel/ViewportContainer"]
size = Vector2( 480, 228 )
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Map" type="Node2D" parent="Panel/ViewportContainer/Viewport"]
pause_mode = 2
unique_name_in_owner = true
script = ExtResource( 2 )

[node name="Camera2D" type="Camera2D" parent="Panel/ViewportContainer/Viewport/Map"]
position = Vector2( 41.8034, 30.125 )
z_index = 1
current = true

[node name="Yoyoprojtest" type="Sprite" parent="Panel/ViewportContainer/Viewport/Map"]
z_index = 2

[node name="Dcomp" type="Node2D" parent="Panel/ViewportContainer/Viewport/Map"]
pause_mode = 2
unique_name_in_owner = true
script = ExtResource( 3 )

[node name="HBoxContainer" type="HBoxContainer" parent="."]
margin_top = 250.0
margin_right = 480.0
margin_bottom = 270.0
alignment = 1

[node name="Button" type="Button" parent="HBoxContainer"]
margin_left = 129.0
margin_right = 189.0
margin_bottom = 20.0
text = "j: zoom"

[node name="Button3" type="Button" parent="HBoxContainer"]
margin_left = 193.0
margin_right = 261.0
margin_bottom = 20.0
text = "E:marker"

[node name="Button2" type="Button" parent="HBoxContainer"]
margin_left = 265.0
margin_right = 350.0
margin_bottom = 20.0
text = "K: zoomout"
